"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[4687],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(a),d=i,k=m["".concat(o,".").concat(d)]||m[d]||c[d]||r;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:i,l[1]=s;for(var u=2;u<r;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1207:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var n=a(7462),i=(a(7294),a(3905));const r={},l="Reliable, Scalable and Maintainable Systems",s={unversionedId:"condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/Reliable_Scalable_Maintainable",id:"condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/Reliable_Scalable_Maintainable",title:"Reliable, Scalable and Maintainable Systems",description:"Reliability",source:"@site/docs/99-condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/1_Reliable_Scalable_Maintainable.md",sourceDirName:"99-condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems",slug:"/condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/Reliable_Scalable_Maintainable",permalink:"/notes/docs/condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/Reliable_Scalable_Maintainable",draft:!1,editUrl:"https://github.com/akormous/notes/edit/master/docs/99-condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/1_Reliable_Scalable_Maintainable.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Foundations of Data Systems",permalink:"/notes/docs/condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/"},next:{title:"Data Models and Query Languages",permalink:"/notes/docs/condensed-books/designing-data-intensive-applications/Part-1-Foundations-of-Data-Systems/Data_Models_and_Query_Languages"}},o={},u=[{value:"Reliability",id:"reliability",level:2},{value:"How to make systems fault-tolerant?",id:"how-to-make-systems-fault-tolerant",level:2},{value:"Scalability",id:"scalability",level:2},{value:"Describing Load",id:"describing-load",level:3},{value:"Describing Performance",id:"describing-performance",level:3},{value:"Vertical and Horizontal scaling",id:"vertical-and-horizontal-scaling",level:2},{value:"Maintainability",id:"maintainability",level:2},{value:"<strong>Operability</strong>",id:"operability",level:3},{value:"<strong>Simplicity</strong>",id:"simplicity",level:3},{value:"<strong>Evolvability</strong>",id:"evolvability",level:3}],p={toc:u};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"reliable-scalable-and-maintainable-systems"},"Reliable, Scalable and Maintainable Systems"),(0,i.kt)("h2",{id:"reliability"},"Reliability"),(0,i.kt)("p",null,"The system should continue to work ",(0,i.kt)("em",{parentName:"p"},"correctly")," even in the face of ",(0,i.kt)("em",{parentName:"p"},"adversity"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Performing the correct function at the desired level of performance"),(0,i.kt)("li",{parentName:"ul"},"Tolerates user mistakes, unexpected usage of software"),(0,i.kt)("li",{parentName:"ul"},"Prevents any unauthorized access and abuse")),(0,i.kt)("p",null,"There are mainly 3 types of faults that occur"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Hardware Faults",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Hard disks crash, faulty RAMs, power cuts, someone messes up the wiring"))),(0,i.kt)("li",{parentName:"ol"},"Software Faults",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Bugs, runaway process, cascading failures"))),(0,i.kt)("li",{parentName:"ol"},"Human Errors",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Wrong configuration")))),(0,i.kt)("mermaid",{value:'pie showData \n    title Fault Distribution\n    "Hardware Faults": 20\n    "Software Faults + Human Errors": 80'}),(0,i.kt)("h2",{id:"how-to-make-systems-fault-tolerant"},"How to make systems fault-tolerant?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Hardware Faults",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add redundancy to systems"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/RAID"},"RAID"),", dual power-supplies, hot-swappable CPUs, power backups"),(0,i.kt)("li",{parentName:"ul"},"rolling-upgrades"))),(0,i.kt)("li",{parentName:"ul"},"Software Faults",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"thorough testing"),(0,i.kt)("li",{parentName:"ul"},"measuring, monitoring and analyzing system behavior in production "))),(0,i.kt)("li",{parentName:"ul"},"Human Errors",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"well-designed abstractions, APIs"),(0,i.kt)("li",{parentName:"ul"},"provide sandbox environments"),(0,i.kt)("li",{parentName:"ul"},"automated testing, setup ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Telemetry"},"telemetry")),(0,i.kt)("li",{parentName:"ul"},"easy to rollback")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"scalability"},"Scalability"),(0,i.kt)("p",null,"System's ability to cope up with increased load."),(0,i.kt)("h3",{id:"describing-load"},"Describing Load"),(0,i.kt)("p",null,"Load can be described using ",(0,i.kt)("em",{parentName:"p"},"load parameters"),". Load parameters depends on your application. For example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"requests per second to a web server"),(0,i.kt)("li",{parentName:"ul"},"reads to write ratio in a database"),(0,i.kt)("li",{parentName:"ul"},"cache hit rate"),(0,i.kt)("li",{parentName:"ul"},"number of simultaneous processes")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Fan-out")," is a load parameter which is simply the number of requests to other services that we need to make in order to serve one incoming request. It is used in messaging systems/social media websites such as twitter."),(0,i.kt)("h3",{id:"describing-performance"},"Describing Performance"),(0,i.kt)("p",null,"Similar to load parameters, there are performance parameters."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Throughput"),": number of requests processed per second"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Response time"),": the time between a client sending a request and receiving a response"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Latency"),": duration that a request is waiting to be handled - during which it is latent (awaiting service)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Percentiles"),": percentile of requests by response time (p50 = median), for ex. p50, p95, p99, p999")),(0,i.kt)("p",null,"2 questions that you need to ask"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How is the performance affected, when you increase the load, and keep the system resources unchanged ?"),(0,i.kt)("li",{parentName:"ul"},"How much resources need to be increased in order to keep the performance unchanged ?")),(0,i.kt)("h2",{id:"vertical-and-horizontal-scaling"},"Vertical and Horizontal scaling"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Vertical scaling"),": moving to a more powerful machine"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Horizontal scaling"),": distributing the load across multiple smaller machines")),(0,i.kt)("p",null,"Distributing load across multiple machines is also known as a ",(0,i.kt)("em",{parentName:"p"},"shared-nothing")," architecture."),(0,i.kt)("p",null,"Good architectures involves a pragmatic mixture of the above 2 approaches."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"maintainability"},"Maintainability"),(0,i.kt)("p",null,"Majority of the cost of software is in its ongoing maintenance - "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"fixing bugs"),(0,i.kt)("li",{parentName:"ul"},"keeping its systems operational"),(0,i.kt)("li",{parentName:"ul"},"investigating failures"),(0,i.kt)("li",{parentName:"ul"},"adapting it to new platforms"),(0,i.kt)("li",{parentName:"ul"},"modifying it for new use-cases"),(0,i.kt)("li",{parentName:"ul"},"repaying technical debt"),(0,i.kt)("li",{parentName:"ul"},"adding new features")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Every legacy system is unpleasant in its own way, you just have to deal with it.")),(0,i.kt)("p",null,"But there are these 3 design principles that one should keep in mind while desiging a software"),(0,i.kt)("h3",{id:"operability"},(0,i.kt)("strong",{parentName:"h3"},"Operability")),(0,i.kt)("p",null,"Make it easy for operations teams to keep the system running smoothly"),(0,i.kt)("h3",{id:"simplicity"},(0,i.kt)("strong",{parentName:"h3"},"Simplicity")),(0,i.kt)("p",null,"Make it easy for new engineers to understand the system"),(0,i.kt)("h3",{id:"evolvability"},(0,i.kt)("strong",{parentName:"h3"},"Evolvability")),(0,i.kt)("p",null,"Make it easy for engineers to make changes to the system in the future. Also known as, modifiability, extensibility, or plasticity"),(0,i.kt)("p",null,"Simplicity and Evolvability are highly dependent on the ",(0,i.kt)("strong",{parentName:"p"},"low-level design")," of a system."))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[2570],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(n),u=r,d=c["".concat(s,".").concat(u)]||c[u]||k[u]||l;return n?a.createElement(d,o(o({ref:t},p),{},{components:n})):a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const l={},o="CLI - epic cheat sheet",i={unversionedId:"docker-kubernetes/CLI",id:"docker-kubernetes/CLI",title:"CLI - epic cheat sheet",description:"- docker info - display system info",source:"@site/docs/3-docker-kubernetes/CLI.md",sourceDirName:"3-docker-kubernetes",slug:"/docker-kubernetes/CLI",permalink:"/notes/docs/docker-kubernetes/CLI",draft:!1,editUrl:"https://github.com/akormous/notes/edit/master/docs/3-docker-kubernetes/CLI.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker and Kubernetes",permalink:"/notes/docs/docker-kubernetes/"},next:{title:"Docker",permalink:"/notes/docs/docker-kubernetes/Docker"}},s={},m=[{value:"Running and Stopping",id:"running-and-stopping",level:2},{value:"Set limits",id:"set-limits",level:2},{value:"Attach shell",id:"attach-shell",level:2},{value:"Cleaning up",id:"cleaning-up",level:2},{value:"Building",id:"building",level:2},{value:"Volume",id:"volume",level:2},{value:"Docker compose",id:"docker-compose",level:2},{value:"K8s Context",id:"k8s-context",level:2},{value:"K8s Namespace",id:"k8s-namespace",level:2},{value:"K8s Pods",id:"k8s-pods",level:2}],p={toc:m};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cli---epic-cheat-sheet"},"CLI - epic cheat sheet"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker info")," - display system info"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker version")," - display system's version"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker login")," - login to Docker registry")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"running-and-stopping"},"Running and Stopping"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker pull ","[imagename]")," - pull image from registry"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker run ","[imagename]")," - run containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker run -d ","[imagename]")," - detached mode"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker start ","[containername]")," - start stopped containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker ps")," - list running containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker ps -a")," - list all (running and stopped) containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker stop ","[containername]")," - stop container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker kill ","[containername]")," - kill container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker image inspect ","[imagename]")," - get image info")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Difference between image name and container name?")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Image name is the name of the image in the container registry. While container name is the name of the running instance of the docker image.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"set-limits"},"Set limits"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},'docker run --memory="256m" nginx')," - set memory for a container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},'docker run --cpus=".5" nginx')," - set cpu for a container")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"attach-shell"},"Attach shell"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker run -it nginx -- /bin/bash")," - Attach shell"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker run -it nginx -- microsoft/powershell:nanoserver pwsh.exe")," - Attach powershell"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker container exec -it ","[containername]"," bash")," - Attach to a running container")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"cleaning-up"},"Cleaning up"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker rm ","[containername]")," - remove stopped containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker rm $(docker ps -a -q)")," - remove all stopped containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker images")," - lists images"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker rmi ","[imagename]")," - delete image"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker system prune -a")," - remove all images not in use by any container, USE CAREFULLY")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"building"},"Building"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker build -t ","[name:tag]"," .")," - Build an image using a Dockerfile located in './' (same folder)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker build -t ","[name:tag]"," -f ","[fileName]")," - Build an image using a Dockerfile located in different folder"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker tag ","[imagename][name:tag]")," - Tag an existing image")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"volume"},"Volume"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker create volume ","[volumeName]")," - Creates a new volume"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker volume ls")," - Lists the volumes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker volume inspect ","[volumeName]")," - Display the volume info"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker volume rm ","[volumeName]")," - Deletes a volume"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker volume prune")," - Delets all volumes not mounted")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"docker-compose"},"Docker compose"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose build")," - Build the images specified in YAML file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose start")," - Start the containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose stop")," - Stop the containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose up -d")," - Build and start"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose ps")," - List what's running"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose rm")," - Remove from memory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose down")," - Stop and remove"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose logs")," - Get the logs"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose exec ","[container]"," bash")," - Run a command in a container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose -p ","[projectName]"," up -d")," - Build and run an instance as a project (Allows us to run 2 instances of the same project)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose ls")," - List running projects"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose cp ","[containerID]",":","[SRC_PATH][DEST_PATH]")," - Copy files from the container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docker compose cp ","[SRC_PATH][containerID]",":","[DEST_PATH]")," - Copy files to the container")),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"kubernetes-cli-commands---epic-cheat-sheet"},"Kubernetes CLI commands - epic cheat sheet"),(0,r.kt)("h2",{id:"k8s-context"},"K8s Context"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl config current-context")," - Get the current context"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl config get-contexts")," - List all context"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl config use-context ","[contextName]")," - Set the current context"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl config delete-context ","[contextName]")," - Delete a context from the config file")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"k8s-namespace"},"K8s Namespace"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl get namespace")," - List all namespaces"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl get ns")," - List all namespaces (shortcut)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl config set-context --current --namespace=","[namespaceName]")," - Set the current context to use a namespace"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl create ns ","[namespaceName]")," - Create a namespace"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl delete ns ","[namespaceName]")," - Delete a namespace"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl get pods --all-namespace")," - List all pods in all namespaces")),(0,r.kt)("h2",{id:"k8s-pods"},"K8s Pods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl create -f ","[pod-definition.yml]")," - Create a pod"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl run ","[podname]",' --image=busybox -- /bin/sh -c "sleep 3600"')," - Run a pod"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl get pods")," - List the running pods"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl get pods -o wide")," - List the running pods with detailed info"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl describe pod ","[podname]")," - Show pod info"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl get pod ","[podname]"," -o yaml > file.yaml")," - Extract the pod defintion in YAML and save it to a file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl exec -it ","[podname]"," -- sh")," - Interactive mode"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl delete -f ","[pod-definition.yml]")," - Delete a pod"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl delete pod ","[podname]")," - Delete a pod using pod name")),(0,r.kt)("p",null,"In case of multi-container pods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl exec -it ","[podname]"," -c ","[containername]"," -- sh")," - Exec into a container of a pod"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"kubectl logs ","[podname]"," -c ","[containername]")," -- Get the logs for a container")))}c.isMDXComponent=!0}}]);